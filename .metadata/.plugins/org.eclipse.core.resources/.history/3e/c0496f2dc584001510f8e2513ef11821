package com.example.rss01;

import java.io.IOException;
import java.util.List;

import org.json.JSONObject;

import com.squareup.okhttp.Call;
import com.squareup.okhttp.OkHttpClient;
import com.squareup.okhttp.Request;
import com.squareup.okhttp.Response;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;

public class MainActivity extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		TextView tv = (TextView) findViewById(R.id.textView1);
		tv.setText("hiiii");

		HttpDataGetter hd = new HttpDataGetter();
		hd.execute(null, null);

		// API key: 448ba0f36b0f893a347572821031ef8a
	}

	private class HttpDataGetter extends AsyncTask<String, String, Weather> {
		@Override
		protected Weather doInBackground(String... params) {

			Weather w = new Weather();
			WeatherDetails wd = new WeatherDetails();
			try {
				w.country = "aaa";
				w.cnt = 7;
				w.CityName = "Tehran";
				String urlString = String.format(
						"http://api.openweathermap.org/data/2.5/forecast/daily?q=%s&mode=json&units=metric&cnt=%d&appid=448ba0f36b0f893a347572821031ef8a",
						w.CityName, w.cnt);
				String responseString = new OkHttpClient().newCall(new Request.Builder().url(urlString).build())
						.execute().body().string();
				JSONObject jsonResult = new JSONObject(responseString);
				w.CityName = jsonResult.getJSONObject("city").getString("name").toString();
				w.country = jsonResult.getJSONObject("city").getString("country").toString();

				// for (int i = 0; i < jsonResult.getJSONArray("list").length();
				// i++) {
				// String aa = jsonResult.getString("country");
				// w.country =aa;
				int i = 6;

				wd.DayTemp = jsonResult.getJSONArray("list").getJSONObject(i).getJSONObject("temp").getLong("day");
				wd.MinTemp = jsonResult.getJSONArray("list").getJSONObject(i).getJSONObject("temp").getLong("min");
				wd.MaxTemp = jsonResult.getJSONArray("list").getJSONObject(i).getJSONObject("temp").getLong("max");
				wd.NightTemp = jsonResult.getJSONArray("list").getJSONObject(i).getJSONObject("temp").getLong("night");
				wd.EveTemp = jsonResult.getJSONArray("list").getJSONObject(i).getJSONObject("temp").getLong("eve");
				wd.MornTemp = jsonResult.getJSONArray("list").getJSONObject(i).getJSONObject("temp").getLong("morn");
				wd.Pressure = jsonResult.getJSONArray("list").getJSONObject(i).getLong("pressure");

				wd.DescriptionWeather = jsonResult.getJSONArray("list").getJSONObject(i).getJSONArray("weather")
						.getJSONObject(0).getString("description").toString();

				// .getJSONObject(0).getJSONArray("weather").getJSONObject(0)
				// .getString("description");

				// }
			} catch (Exception e) {
				e.printStackTrace();
				Log.e("error", e.getMessage());
			}
			w.WeatherDetails.add(wd);
			return w;

		}

		@Override
		protected void onPostExecute(Weather result) {
			Log.v("12121121", String.valueOf(result.WeatherDetails.get(0).DescriptionWeather));
			Log.v("12133131", String.valueOf(result.CityName));
			Log.v("12133131", String.valueOf(result.country));
			Log.v("12121121", (result.WeatherDetails.get(0)).toString());

		}

	}
}
